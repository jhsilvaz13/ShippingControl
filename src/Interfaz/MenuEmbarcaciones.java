/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Interfaz;

import Mundo.estructuras.listas.ArrayList;
import Mundo.estructuras.listas.LinkedList;
import Mundo.estructuras.listas.Node;
import Mundo.shippingcontrol.Embarcacion;
import Mundo.estructuras.listas.Queue;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author snsc2
 */
public class MenuEmbarcaciones extends javax.swing.JPanel {

    /**
     * Creates new form MenuEmbarcaciones
     */
    private MarcoPrincipal principal;

    private Map<Integer, String> buques = new java.util.HashMap<Integer, String>();

    private String[] dis = {"No Disponible", "Disponible"};

    public MenuEmbarcaciones(MarcoPrincipal principal) {
        buques.put(0, "Cargo general");
        buques.put(1, "Portacontenedor");
        buques.put(2, "Granelero");
        buques.put(3, "Frigorifrico");
        buques.put(4, "Ro-Ro");
        buques.put(5, "Tanquero");
        buques.put(6, "Industrial");

        this.principal = principal;
        initComponents();
        FillEmbarcacionesTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void FillEmbarcacionesTable() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        jTable1.setRowSorter(null);
        model.setRowCount(0);
        int counterDis = 0;
        int counter = 0;
        try {
            LinkedList<Embarcacion> PrintE = principal.getPuerto().GetEmbarcaciones();
            Object rowData[] = new Object[7];
            if (PrintE == null) {
                JOptionPane.showMessageDialog(null, "No hay embarcaciones registradas");
            } else {
                Node<Embarcacion> Iterador = PrintE.getBeginNode();
                while (Iterador != null) {
                    rowData[0] = Iterador.data.getIMO();
                    rowData[1] = Iterador.data.getNombreEmbarcacion();
                    rowData[2] = Iterador.data.getBandera();
                    rowData[3] = buques.get(Iterador.data.getTipoDeEmbarcacion());
                    rowData[4] = Iterador.data.getCapacidad();
                    rowData[5] = Iterador.data.getContenedoresAct();
                    rowData[6] = dis[Iterador.data.getDisponibilidad()];
                    model.addRow(rowData);
                    if (Iterador.data.getDisponibilidad() == 1) {
                        counterDis++;
                    }
                    counter++;
                    Iterador = Iterador.nextNode;
                }
            }
            jLabel6.setText(String.valueOf(counter));
            jLabel7.setText(String.valueOf(counterDis));
            jLabel8.setText(String.valueOf(counter - counterDis));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jCheckBox6 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox1 = new javax.swing.JCheckBox();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jCheckBox7 = new javax.swing.JCheckBox();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabelError1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton4.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jButton4.setText("Descargar Embarcación");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 660, 300, 55));

        jButton3.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jButton3.setText("Editar Embarcación");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 590, 300, 55));

        jButton2.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jButton2.setText("Registrar Embarcación");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 520, 300, 50));

        jPanel1.setBackground(new java.awt.Color(160, 196, 242));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 1, 26)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Embarcaciones en el puerto: ");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, 40));

        jLabel3.setFont(new java.awt.Font("Trebuchet MS", 1, 26)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Embarcaciones disponibles:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, 40));

        jLabel4.setFont(new java.awt.Font("Trebuchet MS", 1, 26)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Embarcaciones no disponibles: ");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, -1, 40));

        jLabel6.setFont(new java.awt.Font("Trebuchet MS", 1, 26)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("?");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 40, -1, 40));

        jLabel7.setFont(new java.awt.Font("Trebuchet MS", 1, 26)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("?");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 110, -1, 40));

        jLabel8.setFont(new java.awt.Font("Trebuchet MS", 1, 26)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("?");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 180, -1, 40));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 520, 870, 270));

        jTable1.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "IMO", "Nombre", "Bandero", "Tipo", "Capacidad", "Contenedores actuales", "Disponibilidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(0, 0, 0));
        jTable1.setRowHeight(20);
        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 1180, 340));

        jCheckBox6.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jCheckBox6.setText("Contenedores actuales");
        jCheckBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox6ActionPerformed(evt);
            }
        });
        add(jCheckBox6, new org.netbeans.lib.awtextra.AbsoluteConstraints(495, 130, 220, 30));

        jCheckBox5.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jCheckBox5.setText("Capacidad");
        jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox5ActionPerformed(evt);
            }
        });
        add(jCheckBox5, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 130, 115, 30));

        jCheckBox4.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jCheckBox4.setText("Tipo");
        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });
        add(jCheckBox4, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 130, 65, 30));

        jCheckBox3.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jCheckBox3.setText("Bandera");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });
        add(jCheckBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 130, 100, 30));

        jCheckBox2.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jCheckBox2.setText("Nombre");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });
        add(jCheckBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, 95, 30));

        jCheckBox1.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jCheckBox1.setText("IMO");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        jCheckBox1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jCheckBox1PropertyChange(evt);
            }
        });
        add(jCheckBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 60, 30));

        jTextField1.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(0, 0, 0));
        jTextField1.setToolTipText("Buscar");
        jTextField1.setAlignmentX(5.0F);
        jTextField1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextField1.setMargin(new java.awt.Insets(0, 50, 0, 0));
        jTextField1.setMinimumSize(new java.awt.Dimension(8, 19));
        add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, 360, 28));

        jButton1.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jButton1.setText("Buscar");
        jButton1.setBorder(null);
        jButton1.setBorderPainted(false);
        jButton1.setMaximumSize(new java.awt.Dimension(100, 30));
        jButton1.setPreferredSize(new java.awt.Dimension(100, 30));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 90, 100, 30));
        jButton1.getAccessibleContext().setAccessibleDescription("");

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 1, 60)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Embarcaciones");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 430, 70));

        jCheckBox7.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jCheckBox7.setText("Disponibilidad");
        jCheckBox7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox7ActionPerformed(evt);
            }
        });
        add(jCheckBox7, new org.netbeans.lib.awtextra.AbsoluteConstraints(725, 130, -1, 30));

        jButton5.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jButton5.setText("Actualizar Tabla");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 730, 300, 55));

        jButton6.setBackground(new java.awt.Color(160, 196, 242));
        jButton6.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jButton6.setForeground(new java.awt.Color(0, 0, 0));
        jButton6.setText("?");
        jButton6.setBorder(null);
        jButton6.setBorderPainted(false);
        jButton6.setMaximumSize(new java.awt.Dimension(30, 30));
        jButton6.setPreferredSize(new java.awt.Dimension(30, 30));
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton6MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton6MouseExited(evt);
            }
        });
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 90, 30, 30));

        java.awt.Image img= new javax.swing.ImageIcon("..\\ShippingControl\\src\\Interfaz\\images\\Buscar.png").getImage();
        jLabel5.setIcon(new javax.swing.ImageIcon(img.getScaledInstance(30, 30, java.awt.Image.SCALE_SMOOTH)));
        jLabel5.setPreferredSize(new java.awt.Dimension(30, 30));
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 30, 30));

        jLabelError1.setFont(new java.awt.Font("Trebuchet MS", 0, 16)); // NOI18N
        jLabelError1.setForeground(new java.awt.Color(0, 0, 0));
        jLabelError1.setText("Recuerde que para buscar por IMO debe ingresar el número completo.");
        jLabelError1.setVisible(false);
        add(jLabelError1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 90, -1, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Embarcacion last = principal.getPuerto().GetEmbarcaciones().getLastNode().getData();
        principal.addPanel(1, new RegistroEmbarcacion(true, principal, last.getIMO() + 1, "", "", 0, 0, 0, true));
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jCheckBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox6ActionPerformed
        if (jCheckBox6.isSelected()) {
            jCheckBox2.setSelected(false);
            jCheckBox3.setSelected(false);
            jCheckBox1.setSelected(false);
            jCheckBox5.setSelected(false);
            jCheckBox4.setSelected(false);
            jCheckBox7.setSelected(false);
        }
    }//GEN-LAST:event_jCheckBox6ActionPerformed

    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox5ActionPerformed
        if (jCheckBox5.isSelected()) {
            jCheckBox2.setSelected(false);
            jCheckBox3.setSelected(false);
            jCheckBox1.setSelected(false);
            jCheckBox4.setSelected(false);
            jCheckBox6.setSelected(false);
            jCheckBox7.setSelected(false);
        }
    }//GEN-LAST:event_jCheckBox5ActionPerformed

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        if (jCheckBox4.isSelected()) {
            jCheckBox2.setSelected(false);
            jCheckBox3.setSelected(false);
            jCheckBox1.setSelected(false);
            jCheckBox5.setSelected(false);
            jCheckBox6.setSelected(false);
            jCheckBox7.setSelected(false);
        }
    }//GEN-LAST:event_jCheckBox4ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        if (jCheckBox3.isSelected()) {
            jCheckBox2.setSelected(false);
            jCheckBox1.setSelected(false);
            jCheckBox4.setSelected(false);
            jCheckBox5.setSelected(false);
            jCheckBox6.setSelected(false);
            jCheckBox7.setSelected(false);
        }
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        if (jCheckBox2.isSelected()) {
            jCheckBox1.setSelected(false);
            jCheckBox3.setSelected(false);
            jCheckBox4.setSelected(false);
            jCheckBox5.setSelected(false);
            jCheckBox6.setSelected(false);
            jCheckBox7.setSelected(false);
        }
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        if (jCheckBox1.isSelected()) {
            jCheckBox2.setSelected(false);
            jCheckBox3.setSelected(false);
            jCheckBox4.setSelected(false);
            jCheckBox5.setSelected(false);
            jCheckBox6.setSelected(false);
            jCheckBox7.setSelected(false);
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jCheckBox1PropertyChange

    }//GEN-LAST:event_jCheckBox1PropertyChange

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try {
            int tipo = -1;
            for (Map.Entry<Integer, String> entry : buques.entrySet()) {

                if (entry.getValue() == jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString()) {
                    tipo = entry.getKey();
                }
            }
            Queue<Embarcacion> aux = principal.getPuerto().GetEmbarcaciones();
            principal.addPanel(1, new RegistroEmbarcacion(false, principal, Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString()), jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString(),
                    jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString(), tipo, Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString()),
                    Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString()), (dis[0] == jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString()) ? false : true));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Seleccione la fila deseada antes de editar.");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jCheckBox7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox7ActionPerformed
        // TODO add your handling code here:
        if (jCheckBox7.isSelected()) {
            jCheckBox1.setSelected(false);
            jCheckBox2.setSelected(false);
            jCheckBox3.setSelected(false);
            jCheckBox4.setSelected(false);
            jCheckBox5.setSelected(false);
            jCheckBox6.setSelected(false);
        }
    }//GEN-LAST:event_jCheckBox7ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (jCheckBox1.isSelected()) {
            try {
                int x;
                x = Integer.parseInt(jTextField1.getText());
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                model.setRowCount(0);
                Object[] a = new Object[7];
                String b;
                a = (Object[]) Embarcacion.FiltrarIMO(x, principal.getPuerto());
                b = a.toString();
                model.addRow(a);

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Para filtrar por IMO solo se reciben números.");
            }
        } else if (jCheckBox2.isSelected()) {
            TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(((DefaultTableModel) jTable1.getModel()));
            sorter.setRowFilter(RowFilter.regexFilter(jTextField1.getText(), 1));
            jTable1.setRowSorter(sorter);
        } else if (jCheckBox3.isSelected()) {
            String x;
            x = jTextField1.getText();
            if (x.contains("1") || x.contains("2") || x.contains("3") || x.contains("4") || x.contains("5") || x.contains("6")
                    || x.contains("7") || x.contains("8") || x.contains("9") || x.contains("0")) {
                JOptionPane.showMessageDialog(null, "Para filtrar por Bandera no se reciben números.");
            } else {
                TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(((DefaultTableModel) jTable1.getModel()));
                sorter.setRowFilter(RowFilter.regexFilter(jTextField1.getText(), 2));
                jTable1.setRowSorter(sorter);
            }
        } else if (jCheckBox4.isSelected()) {
            String x;
            x = jTextField1.getText();
            if (x.contains("1") || x.contains("2") || x.contains("3") || x.contains("4") || x.contains("5") || x.contains("6")
                    || x.contains("7") || x.contains("8") || x.contains("9") || x.contains("0")) {
                JOptionPane.showMessageDialog(null, "Para filtrar por Tipo no se reciben números.");
            } else {
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                model.setRowCount(0);
                ArrayList<Object[]> rows = Embarcacion.filtrarTipo(jTextField1.getText(), principal.getPuerto());
                if (rows != null) {
                    for (int i = 0; i < rows.length(); i++) {
                        model.addRow(rows.get(i));
                    }
                }
            }
        } else if (jCheckBox5.isSelected()) {
            try {
                if (jTextField1.getText().equals("")) {
                    TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(((DefaultTableModel) jTable1.getModel()));
                    sorter.setRowFilter(RowFilter.regexFilter(jTextField1.getText(), 4));
                    jTable1.setRowSorter(sorter);
                } else {
                    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                    model.setRowCount(0);
                    ArrayList<Object[]> rows = Embarcacion.filtrarCapacidad(jTextField1.getText(), principal.getPuerto());
                    if (rows != null) {
                        for (int i = 0; i < rows.length(); i++) {
                            model.addRow(rows.get(i));
                        }
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Para filtrar por Capacidad solo se reciben números.");
            }
        } else if (jCheckBox6.isSelected()) {
            if (jTextField1.getText().equals("")) {
                TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(((DefaultTableModel) jTable1.getModel()));
                sorter.setRowFilter(RowFilter.regexFilter(jTextField1.getText(), 5));
                jTable1.setRowSorter(sorter);
            } else {
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                model.setRowCount(0);
                ArrayList<Object[]> rows = Embarcacion.filtrarContenedores(jTextField1.getText(), principal.getPuerto());
                for (int i = 0; i < rows.length(); i++) {
                    model.addRow(rows.get(i));
                }
            }
        } else if (jCheckBox7.isSelected()) {
            String x;
            x = jTextField1.getText();
            if (x.contains("1") || x.contains("2") || x.contains("3") || x.contains("4") || x.contains("5") || x.contains("6")
                    || x.contains("7") || x.contains("8") || x.contains("9") || x.contains("0")) {
                JOptionPane.showMessageDialog(null, "Para filtrar por Disponibilidad no se reciben números.");
            } else {
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                model.setRowCount(0);
                ArrayList<Object[]> rows = Embarcacion.filtrarDisp((jTextField1.getText().equals("Disponible")) ? true : false, principal.getPuerto());
                if (rows != null) {
                    for (int i = 0; i < rows.length(); i++) {
                        model.addRow(rows.get(i));
                    }
                }
            }
        } else {

            JOptionPane.showMessageDialog(null, "Antes de realizar una búsqueda, seleccione por que característica desea filtrar.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        FillEmbarcacionesTable();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseEntered
        // TODO add your handling code here:
        jLabelError1.setVisible(true);
    }//GEN-LAST:event_jButton6MouseEntered

    private void jButton6MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseExited
        // TODO add your handling code here:
        jLabelError1.setVisible(false);

    }//GEN-LAST:event_jButton6MouseExited

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        int ID = 0;
        try {
            ID = Integer.valueOf(JOptionPane.showInputDialog(null, "Ingrese el ID de la bodega: "));
            if (ID < principal.getPuerto().GetBodegas().getBeginNode().data.getID() || ID > principal.getPuerto().GetBodegas().getLastNode().data.getID()) {
                JOptionPane.showMessageDialog(null, "La bodega con el ID " + ID + " no ha sido encontrada", "Atención", JOptionPane.INFORMATION_MESSAGE);
            } else {
                principal.getPuerto().registrarSalidadDeEmbarcacion(ID);
            }
        } catch (Exception e) {
            System.out.println("Error en descargue" + e.getMessage());
            JOptionPane.showMessageDialog(null, "La bodega con el ID " + ID + " no ha sido adssadencontrada", "Atención", JOptionPane.INFORMATION_MESSAGE);
        }
        FillEmbarcacionesTable();
    }//GEN-LAST:event_jButton4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelError1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
